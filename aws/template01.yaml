---
AWSTemplateFormatVersion: "2010-09-09"
Description: Cloudformation template to create a Cloudwatch rule
Resources:
  CloudwatchTriggerLambdaEveryMinuteRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Trigger Lambda Rule
      State: ENABLED
      ScheduleExpression: rate(1 minute)
      Targets:
        - Arn:
            Fn::GetAtt:
              - SendMetricsLambda
              - Arn
          Input: '{"operation":"call-lambda"}'
          Id: ldong-cloudwatch-trigger-lambda-rule

  CloudWatchRulePermissions:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SendMetricsLambda
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - CloudwatchTriggerLambdaEveryMinuteRule
          - Arn

  ldongAlarmSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: "ldong@thoughtworks.com"
          Protocol: email

  MetricsAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmName: ldongMetricsAlert
      AlarmDescription: A CloudWatch Alarm that triggers when changes are made to cloudwatch metrics
      MetricName: metrics
      Namespace: aws-training-ldong
      Statistic: Maximum
      Period: "10"
      EvaluationPeriods: "1"
      Threshold: "100"
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: "Error"
          Value: "unhandled exception"
      AlarmActions:
        - Ref: ldongAlarmSNSTopic
      TreatMissingData: notBreaching

  SendMetricsLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.lambda_handler
      Runtime: python2.7
      Role: arn:aws:iam::494526681395:role/for-aws-training-2
      Code:
        ZipFile: |
          import boto3
          import random
          def lambda_handler(event, context):
              cloudwatch = boto3.client('cloudwatch')
              response = cloudwatch.put_metric_data(
                  MetricData = [
                      {
                          'MetricName': 'metrics',
                          'Dimensions': [
                              {
                                  'Name': 'Error',
                                  'Value': 'unhandled exception'
                              }
                          ],
                          'Unit': 'None',
                          'Value': random.randint(1, 500)
                      },
                  ],
                  Namespace = 'aws-training-ldong'
              )
              print response
